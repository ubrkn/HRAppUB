/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ub.hrappub.service.ui;

import com.ub.hrappub.entity.Kullanici;
import com.ub.hrappub.entity.Personel;
import com.ub.hrappub.service.KullaniciService;
import com.ub.hrappub.service.PersonelService;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ugur
 */
public class frmPersonelListesi extends javax.swing.JFrame {

    Kullanici kullanici;
    PersonelService personelService = new PersonelService();

    public frmPersonelListesi(Kullanici kullanici) {
        initComponents();
        setLocationRelativeTo(null);
        this.kullanici = kullanici;
        pnlPersonel.setVisible(false);
        lblAktifKullanici.setText("Aktif Kullanıcı: " + kullanici.getUsername());

    }

    public frmPersonelListesi() {
        initComponents();
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAktifKullanici = new javax.swing.JLabel();
        pnlPersonel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonelListesi = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuListele = new javax.swing.JMenuItem();
        mnuEkle = new javax.swing.JMenuItem();
        mnuSil = new javax.swing.JMenuItem();
        mnuGuncelle = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblAktifKullanici.setText("Aktif Kullanıcı");

        tblPersonelListesi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPersonelListesi);

        javax.swing.GroupLayout pnlPersonelLayout = new javax.swing.GroupLayout(pnlPersonel);
        pnlPersonel.setLayout(pnlPersonelLayout);
        pnlPersonelLayout.setHorizontalGroup(
            pnlPersonelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPersonelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPersonelLayout.setVerticalGroup(
            pnlPersonelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPersonelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu1.setText("Personel İşlemleri");

        mnuListele.setText("Personel Listesi");
        mnuListele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuListeleActionPerformed(evt);
            }
        });
        jMenu1.add(mnuListele);

        mnuEkle.setText("Personel Ekle");
        mnuEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEkleActionPerformed(evt);
            }
        });
        jMenu1.add(mnuEkle);

        mnuSil.setText("Personel Sil");
        mnuSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSilActionPerformed(evt);
            }
        });
        jMenu1.add(mnuSil);

        mnuGuncelle.setText("Personel Güncelle");
        mnuGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGuncelleActionPerformed(evt);
            }
        });
        jMenu1.add(mnuGuncelle);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPersonel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAktifKullanici)
                        .addContainerGap(377, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPersonel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(lblAktifKullanici)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void mnuEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEkleActionPerformed

        frmPersonelEkle personelEkle = new frmPersonelEkle();
        personelEkle.setVisible(true);

    }//GEN-LAST:event_mnuEkleActionPerformed

    private void mnuListeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuListeleActionPerformed
           personelListesiOlustur(null);
    }//GEN-LAST:event_mnuListeleActionPerformed

    private void mnuSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSilActionPerformed
        if (tblPersonelListesi.getSelectedRowCount()> 1){
            JOptionPane.showMessageDialog(rootPane, "Lütfen sadece bir adet kayıt seçiniz!", "Fazla Kayıt Seçildi", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int seciliKayit = tblPersonelListesi.getSelectedRow();
        if (seciliKayit > -1) {
            int secim = JOptionPane.showConfirmDialog(rootPane, "Seçili kaydı silmek istediğinizden emin misiniz?", "Dikkat", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (secim == 0) {
                String value = tblPersonelListesi.getValueAt(seciliKayit, 0).toString();
                Personel personel = personelService.getById(new Long(value));
                try {
                    personelService.delete(personel);
                } catch (Exception ex) {
                    Logger.getLogger(frmPersonelListesi.class.getName()).log(Level.SEVERE, null, ex);
                }
                personelListesiOlustur(null);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Lütfen silmek istediğiniz kaydı tablodan seçiniz!", "Kayıt Seçilmedi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnuSilActionPerformed

    private void mnuGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGuncelleActionPerformed
        if (tblPersonelListesi.getSelectedRowCount()> 1){
            JOptionPane.showMessageDialog(rootPane, "Lütfen sadece bir adet kayıt seçiniz!", "Fazla Kayıt Seçildi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int seciliKayit = tblPersonelListesi.getSelectedRow();
        if (seciliKayit > -1) {
            String value = tblPersonelListesi.getValueAt(seciliKayit, 0).toString();
            Personel personel = personelService.getById(new Long(value));
            frmPersonelEkle guncelle = new frmPersonelEkle (personel);
            guncelle.setVisible(true);
            personelListesiOlustur(null);
        }
    }//GEN-LAST:event_mnuGuncelleActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAktifKullanici;
    private javax.swing.JMenuItem mnuEkle;
    private javax.swing.JMenuItem mnuGuncelle;
    private javax.swing.JMenuItem mnuListele;
    private javax.swing.JMenuItem mnuSil;
    private javax.swing.JPanel pnlPersonel;
    private javax.swing.JTable tblPersonelListesi;
    // End of variables declaration//GEN-END:variables

    private void personelListesiOlustur(String query) {

        pnlPersonel.setVisible(true);
        
        List<Personel> personelListesi = personelService.getAll(query);
        String [][] data = new String [personelListesi.size()][3];
        
        for (int i = 0; i < personelListesi.size(); i++) {
            data[i][0] = personelListesi.get(i).getAdSoyad();
            data[i][1] = personelListesi.get(i).getUnvan().toString();
            data[i][2] = personelListesi.get(i).getBirimi().toString();
        }
        
        tblPersonelListesi.setModel(new javax.swing.table.DefaultTableModel (
                data,new String[] {"İsim", "Ünvan", "Birim"}
        ));
        
        
    }

}
